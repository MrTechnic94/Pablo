'use strict';

const { SlashCommandBuilder, InteractionContextType } = require('discord.js');
const { createEmbed } = require('../../plugins/createEmbed');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('channelinfo')
        .setDescription('WyÅ›wietla informacje o kanale.')
        .addChannelOption(option =>
            option.setName('kanaÅ‚')
                .setDescription('KanaÅ‚, o ktÃ³rym chcesz uzyskaÄ‡ informacje.')
                .setRequired(false)
        )
        .setContexts(InteractionContextType.Guild),
    async execute(interaction) {
        const channel = interaction.options.getChannel('kanaÅ‚') || interaction.channel;

        const types = {
            0: 'Tekstowy',
            1: 'WiadomoÅ›Ä‡ prywatna',
            2: 'GÅ‚osowy',
            3: 'Grupowa wiadomoÅ›Ä‡ prywatna',
            4: 'Kategoria',
            5: 'OgÅ‚oszenie',
            10: 'WÄ…tek ogÅ‚oszeniowy',
            11: 'WÄ…tek publiczny',
            12: 'WÄ…tek prywatny',
            13: 'Scena',
            14: 'Katalog',
            15: 'Forum',
            16: 'Media'
        };

        const nsfw = channel.nsfw ? 'Tak' : 'Nie';

        const parent = channel.parent ? channel.parent.name : 'Nie ustawiono';

        const topic = channel.topic || 'Nie ustawiono';

        const channelType = types[channel.type] || 'Nieznany';

        const successEmbed = createEmbed({
            title: 'PodglÄ…d kanaÅ‚u',
            fields: [
                { name: '`ðŸ”Ž` KanaÅ‚', value: `**â€¢** ${channel}` },
                { name: '`ðŸ”‘` ID', value: `**â€¢** ${channel.id}` },
                { name: '`ðŸ’¬` Temat', value: `**â€¢** ${topic}` },
                { name: '`ðŸ“‚` Kategoria', value: `**â€¢** ${parent}` },
                { name: '`ðŸ”ž` NSFW', value: `**â€¢** ${nsfw}` },
                { name: '`ðŸ”¢` Pozycja', value: `**â€¢** ${channel.position + 1}` },
                { name: '`ðŸ“¦` Rodzaj', value: `**â€¢** ${channelType}` }
            ]
        });

        return await interaction.reply({ embeds: [successEmbed] });
    },
};